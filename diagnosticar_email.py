#!/usr/bin/env python3
"""
Script para diagnosticar problemas de email
"""

import os
import smtplib
import ssl
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from dotenv import load_dotenv

# Carregar vari√°veis de ambiente
load_dotenv()

def testar_conexao_gmail():
    """Testar conex√£o direta com Gmail SMTP"""
    print("üîç DIAGN√ìSTICO DE EMAIL - GMAIL SMTP")
    print("=" * 50)
    
    # Configura√ß√µes
    GMAIL_EMAIL = os.environ.get('GMAIL_EMAIL', 'pontootimoinvest@gmail.com')
    GMAIL_APP_PASSWORD = os.environ.get('GMAIL_APP_PASSWORD')
    
    print(f"üìß Email: {GMAIL_EMAIL}")
    print(f"üîë Senha: {'‚úÖ Configurada' if GMAIL_APP_PASSWORD else '‚ùå N√ÉO CONFIGURADA'}")
    print()
    
    if not GMAIL_APP_PASSWORD:
        print("‚ùå ERRO: GMAIL_APP_PASSWORD n√£o est√° configurada!")
        print("üí° Configure no arquivo .env:")
        print("   GMAIL_APP_PASSWORD=sua_senha_de_app")
        return False
    
    # Testar conex√£o SMTP
    print("üîå Testando conex√£o SMTP...")
    try:
        smtp_server = "smtp.gmail.com"
        smtp_port = 587
        
        # Criar contexto SSL
        context = ssl.create_default_context()
        
        # Conectar ao servidor
        print(f"   Conectando a {smtp_server}:{smtp_port}...")
        server = smtplib.SMTP(smtp_server, smtp_port)
        
        # Iniciar TLS
        print("   Iniciando TLS...")
        server.starttls(context=context)
        
        # Fazer login
        print("   Fazendo login...")
        server.login(GMAIL_EMAIL, GMAIL_APP_PASSWORD)
        
        print("‚úÖ Conex√£o SMTP OK!")
        
        # Testar envio de email simples
        print("\nüìß Testando envio de email...")
        
        # Criar mensagem de teste
        msg = MIMEMultipart()
        msg['From'] = GMAIL_EMAIL
        msg['To'] = "suellencna@yahoo.com.br"
        msg['Subject'] = "Teste de Conex√£o - Ponto √ìtimo Investimentos"
        
        body = """
        <html>
        <body>
            <h2>Teste de Conex√£o SMTP</h2>
            <p>Este √© um email de teste para verificar se a conex√£o com Gmail est√° funcionando.</p>
            <p>Se voc√™ recebeu este email, a configura√ß√£o est√° correta!</p>
        </body>
        </html>
        """
        
        msg.attach(MIMEText(body, 'html', 'utf-8'))
        
        # Enviar email
        server.send_message(msg)
        print("‚úÖ Email de teste enviado com sucesso!")
        
        # Fechar conex√£o
        server.quit()
        print("‚úÖ Conex√£o fechada com sucesso!")
        
        return True
        
    except smtplib.SMTPAuthenticationError as e:
        print(f"‚ùå ERRO DE AUTENTICA√á√ÉO: {e}")
        print("üí° Verifique se:")
        print("   - A senha de app est√° correta")
        print("   - A verifica√ß√£o em 2 etapas est√° ativada")
        print("   - A senha de app foi gerada corretamente")
        return False
        
    except smtplib.SMTPRecipientsRefused as e:
        print(f"‚ùå ERRO DE DESTINAT√ÅRIO: {e}")
        print("üí° Verifique se o email de destino est√° correto")
        return False
        
    except smtplib.SMTPException as e:
        print(f"‚ùå ERRO SMTP: {e}")
        return False
        
    except Exception as e:
        print(f"‚ùå ERRO GERAL: {e}")
        return False

def verificar_logs_railway():
    """Verificar logs do Railway para erros de email"""
    print("\nüîç VERIFICANDO LOGS DO RAILWAY...")
    print("=" * 50)
    
    import requests
    
    try:
        # Testar health check
        response = requests.get("https://web-production-040d1.up.railway.app/health", timeout=10)
        if response.status_code == 200:
            print("‚úÖ Railway est√° online")
        else:
            print(f"‚ùå Railway com problemas: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå Erro ao conectar com Railway: {e}")

if __name__ == "__main__":
    print("üöÄ INICIANDO DIAGN√ìSTICO DE EMAIL")
    print("=" * 60)
    
    # Testar conex√£o Gmail
    gmail_ok = testar_conexao_gmail()
    
    # Verificar Railway
    verificar_logs_railway()
    
    print("\n" + "=" * 60)
    if gmail_ok:
        print("‚úÖ DIAGN√ìSTICO CONCLU√çDO: Gmail funcionando!")
        print("üí° O problema pode estar no Railway ou no processamento do webhook")
    else:
        print("‚ùå DIAGN√ìSTICO CONCLU√çDO: Problema na configura√ß√£o do Gmail")
        print("üí° Verifique as credenciais e tente novamente")
